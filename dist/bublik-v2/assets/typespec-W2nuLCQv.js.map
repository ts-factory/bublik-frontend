{"version":3,"file":"typespec-W2nuLCQv.js","sources":["../../../bublik-ui/node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/basic-languages/typespec/typespec.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/typespec/typespec.ts\nvar bounded = (text) => `\\\\b${text}\\\\b`;\nvar notBefore = (regex) => `(?!${regex})`;\nvar identifierStart = \"[_a-zA-Z]\";\nvar identifierContinue = \"[_a-zA-Z0-9]\";\nvar identifier = bounded(`${identifierStart}${identifierContinue}*`);\nvar directive = bounded(`[_a-zA-Z-0-9]+`);\nvar keywords = [\n  \"import\",\n  \"model\",\n  \"scalar\",\n  \"namespace\",\n  \"op\",\n  \"interface\",\n  \"union\",\n  \"using\",\n  \"is\",\n  \"extends\",\n  \"enum\",\n  \"alias\",\n  \"return\",\n  \"void\",\n  \"if\",\n  \"else\",\n  \"projection\",\n  \"dec\",\n  \"extern\",\n  \"fn\"\n];\nvar namedLiterals = [\"true\", \"false\", \"null\", \"unknown\", \"never\"];\nvar nonCommentWs = `[ \\\\t\\\\r\\\\n]`;\nvar numericLiteral = `[0-9]+`;\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"/**\", close: \" */\", notIn: [\"string\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' }\n  ],\n  indentationRules: {\n    decreaseIndentPattern: new RegExp(\"^((?!.*?/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\"),\n    increaseIndentPattern: new RegExp(\n      \"^((?!//).)*(\\\\{([^}\\\"'`/]*|(\\\\t|[ ])*//.*)|\\\\([^)\\\"'`/]*|\\\\[[^\\\\]\\\"'`/]*)$\"\n    ),\n    // e.g.  * ...| or */| or *-----*/|\n    unIndentedLinePattern: new RegExp(\n      \"^(\\\\t|[ ])*[ ]\\\\*[^/]*\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*([ ]([^\\\\*]|\\\\*(?!/))*)?$\"\n    )\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".tsp\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  symbols: /[=:;<>]+/,\n  keywords,\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|\"|\\\\\\${)`,\n  tokenizer: {\n    root: [{ include: \"@expression\" }, { include: \"@whitespace\" }],\n    stringVerbatim: [\n      { regex: `(|\"|\"\")[^\"]`, action: { token: \"string\" } },\n      { regex: `\"\"\"${notBefore(`\"`)}`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    stringLiteral: [\n      { regex: `\\\\\\${`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `[^\\\\\\\\\"$]+`, action: { token: \"string\" } },\n      { regex: \"@escapes\", action: { token: \"string.escape\" } },\n      { regex: `\\\\\\\\.`, action: { token: \"string.escape.invalid\" } },\n      { regex: `\"`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    bracketCounting: [\n      { regex: `{`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `}`, action: { token: \"delimiter.bracket\", next: \"@pop\" } },\n      { include: \"@expression\" }\n    ],\n    comment: [\n      { regex: `[^\\\\*]+`, action: { token: \"comment\" } },\n      { regex: `\\\\*\\\\/`, action: { token: \"comment\", next: \"@pop\" } },\n      { regex: `[\\\\/*]`, action: { token: \"comment\" } }\n    ],\n    whitespace: [\n      { regex: nonCommentWs },\n      { regex: `\\\\/\\\\*`, action: { token: \"comment\", next: \"@comment\" } },\n      { regex: `\\\\/\\\\/.*$`, action: { token: \"comment\" } }\n    ],\n    expression: [\n      { regex: `\"\"\"`, action: { token: \"string\", next: \"@stringVerbatim\" } },\n      { regex: `\"${notBefore(`\"\"`)}`, action: { token: \"string\", next: \"@stringLiteral\" } },\n      { regex: numericLiteral, action: { token: \"number\" } },\n      {\n        regex: identifier,\n        action: {\n          cases: {\n            \"@keywords\": { token: \"keyword\" },\n            \"@namedLiterals\": { token: \"keyword\" },\n            \"@default\": { token: \"identifier\" }\n          }\n        }\n      },\n      { regex: `@${identifier}`, action: { token: \"tag\" } },\n      { regex: `#${directive}`, action: { token: \"directive\" } }\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["bounded","text","notBefore","regex","identifierStart","identifierContinue","identifier","directive","keywords","namedLiterals","nonCommentWs","numericLiteral","conf","language"],"mappings":"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","x_google_ignoreList":[0]}